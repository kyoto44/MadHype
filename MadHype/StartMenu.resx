<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QRBXZ7IAAAAASUVORK5CYII=
</value>
  </data>
</root>